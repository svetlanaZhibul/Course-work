Как пользователь, я хочу иметь возможность добавлять несколько изображений в запрос, 
		чтобы получить группу файлов, обработанных одинаковым образом.
Как пользователь, я хочу иметь возможность применять несколько фильтров 'одновременно', 
		чтобы упростить запрос и получить изображение, измененное сразу несколькими эффектами.
Как пользователь, я хочу иметь возможность выбрать директорию (отличную от указанной по умолчанию) для сохранения выходных данных, 
		чтобы новые файлы находились непосредственно в нужном и удобном для меня месте.
Как пользователь, я хочу иметь возможность просматривать список всех операций и параметров запросов, 
		для удобства и простоты использования приложения.


ДД-- здесь надо более точно описывать, КАК и ЧТО я могу делать. Истории -- это не просто функциональный список. Это описание того, КТО и КАК может использовать программу. В данном случае роль одна -- "пользователь", поэтому выражение "Как пользователь, я хочу иметь возможность" можно опускать, а прямо переходить к описанию последовательности действий. Например
ЭПИК регистрация и авторизация:
	1. Программа доступна только для зарегистрированных пользователей. Для подтверждения регистрации в папке с программой должен присутстововать файл register.txt c регистрационным ключом, в котором в зашифрованном (ну, или явном) виде хранятся данные пользователя.
	2. При отсутсвии ключа при использовании программа выводит сообщение об ошибке
	3. Получение регистрационного ключа:
		a. При вызове программы с параметром --register пользователь перезодит к диалогу сбора регистрационной информации
		b. В диалоге пользователь вводит свой email
		c. Прогамма отправляет данные пользователя на сервер авторизации
		d. На указанный email полтзователю приходят инструкции об обпалте и пр....

ЭПИК ввод и вывод
	1. На входе в программу пользователь передает абсолютный или относительный путь к дирерктории с графическими файлами для обработки
	2. На выходе программа создает в указанной дирректории папку "results", где зранятся результаты обработки данных
	3. Команды для обработки можно передать следующими способами:
		a. Как параметры вызова программы
		b. В произвольном файле xml (yml, json, txt....) формата


НУ В ОБЩЕМ ТЫ ПОНЯЛА ... :)